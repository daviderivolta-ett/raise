var P=Object.defineProperty;var B=(a,e,s)=>e in a?P(a,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[e]=s;var u=(a,e,s)=>(B(a,typeof e!="symbol"?e+"":e,s),s);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))t(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function s(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(i){if(i.ep)return;i.ep=!0;const r=s(i);fetch(i.href,r)}})();class J{constructor(){const e=document.querySelector("app-map");this.viewer=new Cesium.Viewer(e,{baseLayerPicker:!1,geocoder:!1,timeline:!1,animation:!1,homeButton:!1,navigationInstructionsInitiallyVisible:!0,navigationHelpButton:!1,sceneModePicker:!1,fullscreenButton:!1,terrain:Cesium.Terrain.fromWorldTerrain()}),this.toColor=!1,this.viewer.screenSpaceEventHandler.setInputAction(this.onClick.bind(this),Cesium.ScreenSpaceEventType.LEFT_CLICK)}static getImageryProvider(){return new Cesium.WebMapTileServiceImageryProvider({url:"https://c.basemaps.cartocdn.com/rastertiles/voyager/{TileMatrix}/{TileCol}/{TileRow}.png",layer:"carto-light",style:"default",format:"image/jpeg",maximumLevel:19,tileMatrixSetID:"default",credit:new Cesium.Credit('&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>')})}async onClick(e){const s=this.viewer.camera.getPickRay(e),t=this.viewer.imageryLayers.pickImageryLayerFeatures(s,this.viewer.scene);if(Cesium.defined(t))try{const i=await Promise.resolve(t);return console.log(`Number of features: ${i.length}`),i.length>0?i[0]:(console.log(null),null)}catch(i){return console.error("Errore nella raccolta delle features:",i),null}else return console.log("No features picked."),null}addLayer(e,s,t){const i=new Cesium.WebMapServiceImageryProvider({url:e,layers:s,parameters:t});this.viewer.imageryLayers.addImageryProvider(i)}removeLayer(e){const s=this.viewer.imageryLayers,t=s.length;for(let i=0;i<t;i++){const r=s.get(i);if(r._imageryProvider._layers===e){s.remove(r);return}}}removeAllLayers(){this.viewer.imageryLayers.removeAll()}getActiveLayers(){return this.viewer.imageryLayers._layers}setCamera(){const e=Cesium.Cartesian3.fromDegrees(8.909041078781357,44.410209942448475,4e3);this.viewer.camera.flyTo({destination:e,orientation:{heading:Cesium.Math.toRadians(0),pitch:Cesium.Math.toRadians(-90),roll:0}})}async addBuilding(){const e=await Cesium.createOsmBuildingsAsync();this.viewer.scene.primitives.add(e)}}const A=(a,e)=>{a.categories.forEach(s=>{const t=document.createElement("app-accordion");e.append(t),t.setAttribute("title",s.name),t.classList.add("category-accordion"),s.groups.forEach((i,r,n)=>{const o=document.createElement("app-accordion");r===n.length-1&&o.classList.add("last-accordion"),t.append(o),o.setAttribute("title",i.name),o.classList.add("layer-accordion");const p=document.createElement("app-checkbox-list");p.setAttribute("input",JSON.stringify(i.layers)),o.append(p)})})},R=(a,e)=>{if(a!=null){let s="";a.data.id.includes(".")&&(s=a.data.id.split(".")[0]);const t=C(e,s);t.name;const i=t.relevant_properties;return _(a.properties,i)}};function C(a,e){for(const s in a){const t=a[s];if(Array.isArray(t)||typeof t=="object"){const i=C(t,e);if(i)return i}else if(typeof t=="string"&&t.includes(e))return a}return null}function _(a,e,s){const t={};if(e){for(const i of e)i.property_name&&a[i.property_name]&&(t[i.display_name]=a[i.property_name]);return t}return t}const D=(a,e)=>{a.categories.forEach(s=>{s.groups.forEach(t=>{t.layers=t.layers.filter(i=>i.tags?i.tags.some(r=>r.includes(e)):!1),t.layers.length===0&&(s.groups=s.groups.filter(i=>i!==t))}),s.groups.length===0&&(a.categories=a.categories.filter(t=>t!==s))})};async function z(a){const e=await fetch(a).then(t=>t.json()),s=e.categories;for(const t of s){const i=[];for(let n=0;n<t.groups.length;n++){let o=t.groups[n];const p=await fetch(o).then(d=>{if(d)return d.json()}).catch(d=>console.log(d));i.push(p)}const r=await Promise.all(i).then(n=>n);t.groups.splice(0,t.groups.length),r.forEach(n=>{t.groups.push(n)})}return e}const E=(a,e,s)=>{const t="https://mappe.comune.genova.it/geoserver/wms",i={format:"image/png",transparent:!0};a.forEach(r=>{r.addEventListener("checkboxListChanged",n=>{n.detail.input.forEach(h=>{const f=e.findIndex(b=>b.layer===h.layer);f!==-1&&e.splice(f,1)}),JSON.parse(n.detail.newValue).forEach(h=>{e.push(h)}),[...s.viewer.imageryLayers._layers].splice(1).forEach(h=>{s.removeLayer(h._imageryProvider._layers)});for(const h of e)h.hasOwnProperty("opacity")&&(i.opacity=h.opacity),s.addLayer(t,h.layer,i);console.log("Active layers:"),console.log(e)})})},L=(a,e)=>{a.forEach(s=>{s.addEventListener("accordionChanged",t=>{a.forEach(i=>{i!=t.target&&i.setAttribute("is-active","false")}),e.forEach(i=>{i.setAttribute("is-active","false")})})}),e.forEach(s=>{s.addEventListener("accordionChanged",t=>{e.forEach(i=>{i!=t.target&&i.setAttribute("is-active","false")})})})},U=(a,e)=>{let s=[];return a.categories.forEach(i=>{i.groups.forEach(r=>{r.layers.forEach(n=>{n.tags&&n.tags.forEach(o=>{o.includes(e)&&s.push(o)})})})}),[...new Set(s)]},$=(a,e,s)=>{let t=0,i=!1;if(a.forEach(r=>{r.getAttribute("data")===JSON.stringify(e)&&(i=!0)}),!i&&e){const r=document.createElement("app-infobox");r.setAttribute("data",JSON.stringify(e)),t++,r.setAttribute("uuid",t),s.append(r)}},F=[self.location.hostname,"fonts.gstatic.com","fonts.googleapis.com","cdn.jsdelivr.net"],W=a=>{var e=Date.now(),s=new URL(a.url);return s.protocol=self.location.protocol,s.hostname===self.location.hostname&&(s.search+=(s.search?"&":"?")+"cache-bust="+e),s.href};self.addEventListener("activate",a=>{a.waitUntil(self.clients.claim())});self.addEventListener("fetch",a=>{if(F.indexOf(new URL(a.request.url).hostname)>-1){const e=caches.match(a.request),s=W(a.request),t=fetch(s,{cache:"no-store"}),i=t.then(r=>r.clone());a.respondWith(Promise.race([t.catch(r=>e),e]).then(r=>r||t).catch(r=>{})),a.waitUntil(Promise.all([i,caches.open("pwa-cache")]).then(([r,n])=>r.ok&&n.put(a.request,r)).catch(r=>{}))}});class k extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <div>
                <input type="checkbox" id="checkbox">
                <label for="checkbox">Label</label>
            </div>                      
            `,this.checkbox=this.shadow.querySelector("input"),this.hasAttribute("is-checked")?this.setAttribute("is-checked",this.getAttribute("is-checked")):this.setAttribute("is-checked","false"),this.label=this.shadow.querySelector("label"),this.hasAttribute("data")&&(this.label.innerHTML=JSON.parse(this.getAttribute("data")).name);const e=JSON.parse(this.getAttribute("data")).components;if(e!=null&&e.length!=0){this.details=document.createElement("details"),this.details.innerHTML=`
                <summary>
                    Opzioni
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                    </svg>                
                </summary>
                `;for(const t of e)this.details.innerHTML+=`<${t}></${t}>`;this.shadow.append(this.details)}this.checkbox.addEventListener("change",t=>{const i=t.target.checked;this.setAttribute("is-checked",i+"")}),this.tool=this.shadow.querySelector("app-opacity-slider"),this.tool&&this.tool.addEventListener("opacityChanged",t=>{this.setAttribute("opacity",t.detail.newValue)});const s=document.createElement("link");s.setAttribute("rel","stylesheet"),s.setAttribute("href","./css/checkbox.css"),this.shadow.append(s),this.render()}attributeChangedCallback(e,s,t){if(e=="is-checked"&&s!==null&&t!==null&&t!==s){const i=new CustomEvent("checkboxChanged",{detail:{name:e,oldValue:s,newValue:t}});this.tool.setAttribute("is-enable",t),this.dispatchEvent(i)}if(e=="opacity"&&t!==s){const i=new CustomEvent("opacityChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}}}u(k,"observedAttributes",["is-checked","opacity"]);customElements.define("app-checkbox",k);class S extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){if(!this.hasAttribute("input"))return;this.input=JSON.parse(this.getAttribute("input")),this.data=[];const e=[];for(let s=0;s<this.input.length;s++)this.checkbox=document.createElement("app-checkbox"),this.checkbox.setAttribute("is-checked","false"),this.checkbox.setAttribute("data",JSON.stringify(this.input[s])),e.push(this.checkbox),this.div.append(this.checkbox);e.forEach(s=>{s.addEventListener("checkboxChanged",()=>{this.itemData=JSON.parse(s.getAttribute("data"));const t=this.data.findIndex(i=>i.layer===this.itemData.layer);t!==-1?this.data.splice(t,1):this.data.push(this.itemData),this.setAttribute("data",JSON.stringify(this.data))})}),e.forEach(s=>{s.addEventListener("opacityChanged",t=>{this.itemData=JSON.parse(s.getAttribute("data")),this.itemData.opacity=t.detail.newValue;const i=this.data.findIndex(r=>r.layer===this.itemData.layer);i!==-1?(this.data.splice(i,1),this.data.push(this.itemData)):this.data.push(this.itemData),this.setAttribute("data",JSON.stringify(this.data))})})}connectedCallback(){this.shadow.innerHTML=`
            <div></div>
            `,this.div=this.shadow.querySelector("div");const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/checkbox-list.css"),this.shadow.append(e),this.render()}attributeChangedCallback(e,s,t){const i=new CustomEvent("checkboxListChanged",{detail:{name:"data",oldValue:s,newValue:t,input:this.input}});t!=s&&this.dispatchEvent(i)}}u(S,"observedAttributes",["data"]);customElements.define("app-checkbox-list",S);class x extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <div class="infobox">
                <div class="drag-handler">
                    <svg id="grip-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                    </svg>

                    <svg id="close-icon" viewPort="0 0 12 12" version="1.1" xmlns="http://www.w3.org/2000/svg">
                        <line x1="1" y1="11" x2="11" y2="1" stroke="black" stroke-width="2"/>
                        <line x1="1" y1="1" x2="11" y2="11" stroke="black" stroke-width="2"/>
                    </svg>
                </div>

                <div class="info-content"></div>
            </div>
            `;const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/infobox.css"),this.shadow.append(e),this.info=this.shadow.querySelector(".info-content"),this.data=JSON.parse(this.getAttribute("data")),Object.keys(this.data).forEach(t=>{const i=this.data[t];this.text=document.createElement("p"),this.text.innerHTML=`
                <span class="info-key">${t}:</span> <span class="info-value">${i}</span>
                `,this.info.append(this.text)}),this.closeIcon=this.shadow.querySelector("#close-icon"),this.closeIcon.addEventListener("click",()=>{this.remove()}),this.div=this.shadow.querySelector(".infobox"),this.dragHandler=this.shadow.querySelector(".drag-handler"),this.positions=[],(t=>{let i=!1,r,n;this.dragHandler.addEventListener("mousedown",o=>{i=!0,r=o.clientX-t.getBoundingClientRect().left,n=o.clientY-t.getBoundingClientRect().top}),document.addEventListener("mousemove",o=>{i&&(t.style.left=o.clientX-r+"px",t.style.top=o.clientY-n+"px")}),document.addEventListener("mouseup",()=>{i=!1,this.setAttribute("position",JSON.stringify(t.getBoundingClientRect()))})})(this.div)}attributeChangedCallback(e,s,t){if(t!=s){const i=new CustomEvent("positionChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}}}u(x,"observedAttributes",["position"]);customElements.define("app-infobox",x);class T extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){this.accordionTitle=this.shadow.querySelector(".accordion-title"),this.accordionTitle&&(this.accordionTitle.textContent=this.title),this.accordionContent=this.shadow.querySelector(".accordion-content"),this.accordionIcon=this.shadow.querySelector(".accordion-icon"),this.accordionContent&&(this.getAttribute("is-active")==="true"?(this.accordionContent.classList.add("accordion-show"),this.accordionIcon.classList.add("accordion-icon-active")):(this.accordionContent.classList.remove("accordion-show"),this.accordionIcon.classList.remove("accordion-icon-active")),this.classList.contains("last-accordion")&&this.accordionContent.classList.add("last-accordion"))}connectedCallback(){this.setAttribute("is-active","false"),this.shadow.innerHTML=`
            <div class="accordion-item">
                <button type="button" class="accordion-btn">
                    <span class="accordion-title"></span>
                    <span class="accordion-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                        </svg>
                    </span>
                </button>
                <div class="accordion-content">
                    <slot></slot>
                </div>
            </div>
            `;const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/accordion.css"),this.shadow.append(e),this.accordionBtn=this.shadow.querySelector(".accordion-btn"),this.accordionBtn.addEventListener("click",()=>{this.accordionContent=this.accordionBtn.nextElementSibling,this.getAttribute("is-active")==="true"?this.setAttribute("is-active","false"):this.setAttribute("is-active","true");const s=new CustomEvent("accordionChanged",{detail:{name:"is-active",oldValue:this.getAttribute("is-active"),newValue:this.getAttribute("is-active")}});this.dispatchEvent(s)})}attributeChangedCallback(e,s,t){e=="title"&&t!=s&&this.render(),e=="is-active"&&t!=s&&this.render()}}u(T,"observedAttributes",["title","is-active"]);customElements.define("app-accordion",T);class q extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){this.input&&(this.input.setAttribute("value",this.getAttribute("value")),this.input.value=this.getAttribute("value"))}connectedCallback(){this.shadow.innerHTML=`
            <input type="search" name="search" id="search" placeholder="Cerca per livelli..." value="">
            `,this.input=this.shadow.querySelector("input");const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/search.css"),this.shadow.append(e),this.input.addEventListener("input",()=>{this.setAttribute("value",this.input.value)})}attributeChangedCallback(e,s,t){const i=new CustomEvent("searchValueChanged",{detail:{name:e,oldValue:s,newValue:t}});t!=s&&(this.dispatchEvent(i),this.render())}}u(q,"observedAttributes",["value"]);customElements.define("app-searchbar",q);class M extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <a id="menu-toggle" class="menu-toggle">
                <span class="menu-toggle-bar menu-toggle-bar--top"></span>
                <span class="menu-toggle-bar menu-toggle-bar--middle"></span>
                <span class="menu-toggle-bar menu-toggle-bar--bottom"></span>
            </a>
            `,this.setAttribute("is-open","false");let e=this.getAttribute("is-open");this.a=this.shadow.querySelector("a");const s=document.createElement("link");s.setAttribute("rel","stylesheet"),s.setAttribute("href","./css/drawer-toggle.css"),this.shadow.append(s),this.a.addEventListener("click",()=>{e=this.getAttribute("is-open")==="true",this.setAttribute("is-open",!e+"")})}attributeChangedCallback(e,s,t){if(e==="is-open"){this.a&&(t==="true"?this.a.classList.add("nav-open"):this.a.classList.remove("nav-open"));const i=new CustomEvent("drawerToggled",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}}}u(M,"observedAttributes",["is-open"]);customElements.define("app-drawer-toggle",M);class O extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){if(this.tags=JSON.parse(this.getAttribute("data")),this.div.innerHTML="",this.tags)for(let e=0;e<this.tags.length;e++)this.span=document.createElement("span"),this.span.textContent=this.tags[e],this.span.setAttribute("name",this.tags[e]),this.span.setAttribute("tabindex",e+1),this.div.append(this.span);this.spans=this.shadow.querySelectorAll("span"),this.spans.forEach(e=>{e.addEventListener("click",()=>{this.setAttribute("selected",e.getAttribute("name"))})})}connectedCallback(){this.shadow.innerHTML=`
            <div></div>
            `,this.selectedSpan=0,this.div=this.shadow.querySelector("div"),this.setAttribute("selected","");const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/autocomplete.css"),this.shadow.append(e)}attributeChangedCallback(e,s,t){if(e=="data"&&t!=s&&this.render(),e=="selected"&&t!=s){const i=new CustomEvent("autocompleteSelected",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i),this.div.innerHTML=""}e=="last-key-pressed"&&t!="Enter"&&t!="ArrowDown"&&t!="ArrowUp"&&(this.selectedSpan=0,this.render()),(e=="last-key-pressed"&&t=="ArrowUp"||t=="ArrowDown")&&(t=="ArrowDown"&&(this.selectedSpan++,this.selectedSpan==this.spans.length+1&&(this.selectedSpan=1),this.shadow.querySelector(`span[tabindex="${this.selectedSpan}"]`).focus()),t=="ArrowUp"&&(this.selectedSpan++,this.selectedSpan==this.spans.length+1&&(this.selectedSpan=1),this.shadow.querySelector(`span[tabindex="${this.selectedSpan}"]`).focus())),e=="last-key-pressed"&&t=="Enter"&&(this.setAttribute("selected",this.shadow.activeElement.getAttribute("name")),this.div.innerHTML="")}}u(O,"observedAttributes",["data","selected","last-key-pressed"]);customElements.define("app-autocomplete",O);class H extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){this.getAttribute("is-enable")=="true"?this.input.disabled=!1:this.input.disabled=!0}connectedCallback(){this.shadow.innerHTML=`
            <div>
                <label>Opacità</label>
                <input type="range">
            </div>
            `,this.setAttribute("is-enable","false"),this.input=this.shadow.querySelector("input"),this.getAttribute("is-enable")=="false"&&(this.input.disabled=!0),this.input.setAttribute("min",0),this.input.setAttribute("max",1),this.input.setAttribute("step",.1),this.input.value=1,this.input.addEventListener("change",()=>{this.setAttribute("opacity",this.input.value)});const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/tool.css"),this.shadow.append(e)}attributeChangedCallback(e,s,t){if(e=="opacity"&&t!=s){const i=new CustomEvent("opacityChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}e=="is-enable"&&s!==null&&t!==null&&t!==s&&this.render()}}u(H,"observedAttributes",["is-enable","opacity"]);customElements.define("app-opacity-slider",H);const j="./json/categories.json",g=new J;g.setCamera();const m=document.querySelector("#categories-section");z(j).then(a=>(A(a,m),a)).then(a=>{const e=document.querySelector("main"),s=document.querySelector("app-drawer-toggle"),t=document.querySelector("#drawer"),i=document.querySelectorAll("app-checkbox-list"),r=document.querySelectorAll(".category-accordion"),n=document.querySelectorAll(".layer-accordion"),o=document.querySelector("app-searchbar"),p=document.querySelector("#drawer-title"),d=document.querySelector("app-autocomplete");s.addEventListener("drawerToggled",l=>{l.detail.newValue=="true"?t.classList.add("drawer-open"):t.classList.remove("drawer-open")}),g.viewer.screenSpaceEventHandler.setInputAction(function(l){g.onClick(l.position).then(c=>{const y=R(c,a),w=document.querySelectorAll("app-infobox");$(w,y,e),s.setAttribute("is-open","false")})},Cesium.ScreenSpaceEventType.LEFT_CLICK),document.querySelectorAll("app-infobox").forEach(l=>{l.addEventListener("positionChanged",c=>{console.log(c.detail.newValue)})});let f;t.addEventListener("click",()=>{f&&clearTimeout(f),f=setTimeout(()=>{s.setAttribute("is-open","false")},1e4)});const b=[];E(i,b,g),L(r,n),o.addEventListener("searchValueChanged",l=>{m.innerHTML="";const c=l.detail.newValue.toLowerCase();p.textContent=`Livelli per: ${c}`;let y=JSON.parse(JSON.stringify(a));if(D(y,c),c=="")A(a,m),p.textContent="Categorie";else if(A(y,m),!m.innerHTML){const v=document.createElement("p");v.innerText=`Nessun livello trovato per ${c}`,m.append(v)}const w=document.querySelectorAll("app-checkbox-list");E(w,b,g);const I=document.querySelectorAll(".category-accordion"),N=document.querySelectorAll(".layer-accordion");if(L(I,N),c.length>=2){const v=U(a,c);d.setAttribute("data",JSON.stringify(v))}else d.setAttribute("data",JSON.stringify(""))}),d.addEventListener("autocompleteSelected",l=>{const c=l.detail.newValue;o.setAttribute("value",c)}),document.addEventListener("keydown",l=>{d.setAttribute("last-key-pressed",l.key)})});
