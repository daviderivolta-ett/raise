var H=Object.defineProperty;var P=(a,e,s)=>e in a?H(a,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[e]=s;var u=(a,e,s)=>(P(a,typeof e!="symbol"?e+"":e,s),s);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))t(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&t(r)}).observe(document,{childList:!0,subtree:!0});function s(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function t(i){if(i.ep)return;i.ep=!0;const o=s(i);fetch(i.href,o)}})();class J{constructor(){const e=document.querySelector("app-map");this.viewer=new Cesium.Viewer(e,{baseLayerPicker:!1,geocoder:!1,timeline:!1,animation:!1,homeButton:!1,navigationInstructionsInitiallyVisible:!0,navigationHelpButton:!1,sceneModePicker:!1,fullscreenButton:!1}),this.toColor=!1,this.viewer.screenSpaceEventHandler.setInputAction(this.onClick.bind(this),Cesium.ScreenSpaceEventType.LEFT_CLICK)}static getImageryProvider(){return new Cesium.WebMapTileServiceImageryProvider({url:"https://c.basemaps.cartocdn.com/rastertiles/voyager/{TileMatrix}/{TileCol}/{TileRow}.png",layer:"carto-light",style:"default",format:"image/jpeg",maximumLevel:19,tileMatrixSetID:"default",credit:new Cesium.Credit('&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>')})}async onClick(e){const s=this.viewer.scene.pick(e);if(s)return s.id}addLayerWMS(e,s,t){const i=new Cesium.WebMapServiceImageryProvider({url:e,layers:s,parameters:t});this.viewer.imageryLayers.addImageryProvider(i)}removeLayerWMS(e){const s=this.viewer.imageryLayers,t=s.length;for(let i=0;i<t;i++){const o=s.get(i);if(o._imageryProvider._layers===e){s.remove(o);return}}}addLayersWFS(e,s,t){let i="YELLOW",o="YELLOW",r="YELLOW",n=.5;t&&t.color&&(i=t.color.toUpperCase(),o=t.color.toUpperCase(),r=t.color.toUpperCase()),t&&t.opacity&&(n=t.opacity);const l=`${e}?service=WFS&typeName=${s}&outputFormat=application/json&request=GetFeature&srsname=EPSG:4326`;fetch(l).then(c=>c.json()).then(c=>{this.viewer.dataSources.add(Cesium.GeoJsonDataSource.load(c,{stroke:Cesium.Color[i].withAlpha(parseFloat(n)),strokeWidth:2,fill:Cesium.Color[o].withAlpha(parseFloat(n))})).then(m=>{m.entities.values.forEach(d=>{d.billboard=void 0,d.point=new Cesium.PointGraphics({pixelSize:18,color:Cesium.Color[r].withAlpha(parseFloat(n)),outlineColor:Cesium.Color[r].withAlpha(parseFloat(n)),outlineWidth:2})})})})}removeLayerWFS(e){const s=this.viewer._dataSourceCollection._dataSources,t=s.length;for(let i=0;i<t;i++){const o=s.get(i);if(o._imageryProvider._layers===e){s.remove(o);return}}}removeAllLayers(){this.viewer.imageryLayers.removeAll()}getActiveLayers(){return this.viewer.imageryLayers._layers}setCamera(){const e=Cesium.Cartesian3.fromDegrees(8.909041078781357,44.410209942448475,4e3);this.viewer.camera.flyTo({destination:e,orientation:{heading:Cesium.Math.toRadians(0),pitch:Cesium.Math.toRadians(-90),roll:0}})}async addBuilding(){const e=await Cesium.createOsmBuildingsAsync();this.viewer.scene.primitives.add(e)}}const y=(a,e)=>{a.categories.forEach(s=>{const t=document.createElement("app-accordion");t.setAttribute("title",s.name),t.classList.add("category-accordion"),s.groups.forEach((i,o,r)=>{const n=document.createElement("app-accordion");o===r.length-1&&n.classList.add("last-accordion"),n.setAttribute("title",i.name),n.classList.add("layer-accordion");const l=document.createElement("app-checkbox-list");l.setAttribute("input",JSON.stringify(i.layers)),n.append(l),t.append(n),e.append(t)})})},_=(a,e)=>{a.categories.forEach(s=>{s.groups.forEach(t=>{t.layers=t.layers.filter(i=>i.tags?i.tags.some(o=>o.includes(e)):!1),t.layers.length===0&&(s.groups=s.groups.filter(i=>i!==t))}),s.groups.length===0&&(a.categories=a.categories.filter(t=>t!==s))})};async function B(a){const e=await fetch(a).then(t=>t.json()),s=e.categories;for(const t of s){const i=[];for(let r=0;r<t.groups.length;r++){let n=t.groups[r];const l=await fetch(n).then(c=>{if(c)return c.json()}).catch(c=>console.log(c));i.push(l)}const o=await Promise.all(i).then(r=>r);t.groups.splice(0,t.groups.length),o.forEach(r=>{t.groups.push(r)})}return e}const A=async(a,e,s)=>{for(const t of a)t.addEventListener("checkboxListChanged",async i=>{i.detail.input.forEach(n=>{const l=e.findIndex(c=>c.layer===n.layer);l!==-1&&e.splice(l,1)}),JSON.parse(i.detail.newValue).forEach(n=>{e.push(n)}),await s.viewer.dataSources.removeAll();for(const n of e)await s.addLayersWFS(n.layer_url_wfs,n.layer,n.style)})},F=(a,e)=>{if(a!=null){let s="";a.id.includes(".")&&(s=a.id.split(".")[0]);const t=E(e,s),i=t.name,o=t.relevant_properties;return D(a.properties,o,i)}};function E(a,e){for(const s in a){const t=a[s];if(Array.isArray(t)||typeof t=="object"){const i=E(t,e);if(i)return i}else if(typeof t=="string"&&t.includes(e))return a}return null}function D(a,e,s){const t={};if(e){for(const i of e)i.property_name&&a[i.property_name]&&(t[i.display_name]=a[i.property_name]._value);return t.Title=s,t}return t}const w=(a,e)=>{a.forEach(s=>{s.addEventListener("accordionChanged",t=>{a.forEach(i=>{i!=t.target&&i.setAttribute("is-active","false")}),e.forEach(i=>{i.setAttribute("is-active","false")})})}),e.forEach(s=>{s.addEventListener("accordionChanged",t=>{e.forEach(i=>{i!=t.target&&i.setAttribute("is-active","false")})})})},R=(a,e)=>{let s=[];return a.categories.forEach(i=>{i.groups.forEach(o=>{o.layers.forEach(r=>{r.tags&&r.tags.forEach(n=>{n.includes(e)&&s.push(n)})})})}),[...new Set(s)]};let C=0;function W(a,e,s){let t=!1;if(a.forEach(i=>{i.getAttribute("data")===JSON.stringify(e)&&(t=!0)}),!t&&e){const i=document.createElement("app-infobox");i.setAttribute("data",JSON.stringify(e)),C++,i.setAttribute("uuid",C),s.append(i)}}const z=[self.location.hostname,"fonts.gstatic.com","fonts.googleapis.com","cdn.jsdelivr.net"],U=a=>{var e=Date.now(),s=new URL(a.url);return s.protocol=self.location.protocol,s.hostname===self.location.hostname&&(s.search+=(s.search?"&":"?")+"cache-bust="+e),s.href};self.addEventListener("activate",a=>{a.waitUntil(self.clients.claim())});self.addEventListener("fetch",a=>{if(z.indexOf(new URL(a.request.url).hostname)>-1){const e=caches.match(a.request),s=U(a.request),t=fetch(s,{cache:"no-store"}),i=t.then(o=>o.clone());a.respondWith(Promise.race([t.catch(o=>e),e]).then(o=>o||t).catch(o=>{})),a.waitUntil(Promise.all([i,caches.open("pwa-cache")]).then(([o,r])=>o.ok&&r.put(a.request,o)).catch(o=>{}))}});class L extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <div class="checkbox">
                <input type="checkbox" id="checkbox">
                <div class="legend"></div>
                <label for="checkbox">Label</label>
            </div>                      
            `,this.checkbox=this.shadow.querySelector("input"),this.hasAttribute("is-checked")&&this.getAttribute("is-checked")=="true"?(this.setAttribute("is-checked",this.getAttribute("is-checked")),this.checkbox.checked=!0):(this.setAttribute("is-checked","false"),this.checkbox.checked=!1),this.label=this.shadow.querySelector("label"),this.hasAttribute("data")&&(this.label.innerHTML=JSON.parse(this.getAttribute("data")).name),this.legend=this.shadow.querySelector(".legend");const e=JSON.parse(this.getAttribute("data")).style.color;this.legend.style.backgroundColor=e;const s=JSON.parse(this.getAttribute("data")).components;if(s!=null&&s.length!=0){this.details=document.createElement("details"),this.details.innerHTML=`
                <summary>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                    </svg>                
                </summary>
                `;for(const i of s)this.component=document.createElement(`${i}`),i=="app-opacity-slider"&&(this.opacity=JSON.parse(this.getAttribute("data")).style.opacity,this.component.setAttribute("opacity",this.opacity),this.component.addEventListener("opacityChanged",o=>{const r=JSON.parse(this.getAttribute("data"));r.style.opacity=o.detail.newValue,this.setAttribute("data",JSON.stringify(r))}));this.details.append(this.component),this.shadow.append(this.details),this.setAttribute("is-details-open","false")}this.checkbox.addEventListener("change",i=>{const o=i.target.checked;this.setAttribute("is-checked",o+"")}),this.details&&this.details.addEventListener("toggle",i=>{i.target.open?this.setAttribute("is-details-open","true"):this.setAttribute("is-details-open","false")});const t=document.createElement("link");t.setAttribute("rel","stylesheet"),t.setAttribute("href","./css/checkbox.css"),this.shadow.append(t)}attributeChangedCallback(e,s,t){if(e=="is-checked"&&s!==null&&t!==null&&t!==s){t=="true"?this.checkbox.checked=!0:this.checkbox.checked=!1;const i=new CustomEvent("checkboxChanged",{detail:{name:e,oldValue:s,newValue:t}});this.toolOpacity=this.shadow.querySelector("app-opacity-slider"),this.toolOpacity&&this.toolOpacity.setAttribute("is-enable",t),this.dispatchEvent(i)}if(e=="data"&&t!==s){const i=new CustomEvent("opacityChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}if(e=="is-details-open"&&s!=null&&t!=null&&t!=s){const i=new CustomEvent("detailStatusChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i),this.getAttribute("is-details-open")=="true"?this.details.setAttribute("open",""):this.details.removeAttribute("open")}}}u(L,"observedAttributes",["is-checked","data","is-details-open"]);customElements.define("app-checkbox",L);class k extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <div></div>
            `,this.div=this.shadow.querySelector("div"),this.setAttribute("all-active","false");const e=document.createElement("link");if(e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/checkbox-list.css"),this.shadow.append(e),!!this.hasAttribute("input")){this.input=JSON.parse(this.getAttribute("input")),this.data=[],this.checkboxes=[];for(let s=0;s<this.input.length;s++)this.checkbox=document.createElement("app-checkbox"),this.checkbox.setAttribute("is-checked","false"),this.checkbox.setAttribute("data",JSON.stringify(this.input[s])),this.checkboxes.push(this.checkbox),this.div.append(this.checkbox);this.checkboxes.forEach(s=>{s.addEventListener("checkboxChanged",()=>{this.itemData=JSON.parse(s.getAttribute("data"));const t=this.data.findIndex(i=>i.layer===this.itemData.layer);t!==-1?this.data.splice(t,1):this.data.push(this.itemData),this.setAttribute("data",JSON.stringify(this.data))}),s.addEventListener("opacityChanged",t=>{this.itemData=JSON.parse(s.getAttribute("data")),this.itemData.opacity=t.detail.newValue;const i=this.data.findIndex(o=>o.layer===this.itemData.layer);i!==-1?(this.data.splice(i,1),this.data.push(this.itemData)):this.data.push(this.itemData),this.setAttribute("data",JSON.stringify(this.data))}),s.addEventListener("detailStatusChanged",t=>{t.detail.newValue=="true"&&this.checkboxes.forEach(i=>{i!==s&&i.setAttribute("is-details-open","false")})})})}}attributeChangedCallback(e,s,t){if(e=="data"&&t!=s){const i=new CustomEvent("checkboxListChanged",{detail:{name:"data",oldValue:s,newValue:t,input:this.input}});this.dispatchEvent(i)}e=="all-active"&&s!=null&&t!=null&&t!=s&&this.checkboxes.forEach(i=>{i.setAttribute("is-checked",this.getAttribute("all-active"))})}}u(k,"observedAttributes",["data","all-active"]);customElements.define("app-checkbox-list",k);class S extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <div class="infobox">
                <div class="drag-handler">
                    <svg id="grip-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                    </svg>

                    <svg id="close-icon" viewPort="0 0 12 12" version="1.1" xmlns="http://www.w3.org/2000/svg">
                        <line x1="1" y1="11" x2="11" y2="1" stroke="black" stroke-width="2"/>
                        <line x1="1" y1="1" x2="11" y2="11" stroke="black" stroke-width="2"/>
                    </svg>
                </div>

                <div class="info-content"></div>
            </div>
            `;const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/infobox.css"),this.shadow.append(e),this.info=this.shadow.querySelector(".info-content"),this.data=JSON.parse(this.getAttribute("data"));const s={Title:this.data.Title};Object.keys(s).forEach(o=>{const r=s[o],n=document.createElement("h3");n.innerText=r,this.info.append(n)});const t={...this.data};delete t.Title,Object.keys(t).forEach(o=>{const r=t[o];this.text=document.createElement("p"),this.text.innerHTML=`
                <span class="info-key">${o}:</span> <span class="info-value">${r}</span>
                `,this.info.append(this.text)}),this.closeIcon=this.shadow.querySelector("#close-icon"),this.closeIcon.addEventListener("click",()=>{const o=new CustomEvent("infoboxRemoved",{detail:{uuid:this.getAttribute("uuid")}});this.dispatchEvent(o),this.remove()}),this.div=this.shadow.querySelector(".infobox"),this.dragHandler=this.shadow.querySelector(".drag-handler"),(o=>{let r=!1,n,l;this.dragHandler.addEventListener("mousedown",c=>{r=!0,n=c.clientX-o.getBoundingClientRect().left,l=c.clientY-o.getBoundingClientRect().top}),document.addEventListener("mousemove",c=>{r&&(o.style.left=c.clientX-n+"px",o.style.top=c.clientY-l+"px")}),document.addEventListener("mouseup",()=>{r=!1,this.setAttribute("position",JSON.stringify(o.getBoundingClientRect()))})})(this.div)}attributeChangedCallback(e,s,t){if(t!=s){const i=new CustomEvent("positionChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}}}u(S,"observedAttributes",["position"]);customElements.define("app-infobox",S);class x extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){this.slots.forEach(e=>{e.assignedNodes().forEach(t=>{(t.nodeName==="APP-ACCORDION"||t.tagName==="APP-ACCORDION")&&t.setAttribute("all-active",this.getAttribute("all-active")),(t.nodeName==="APP-CHECKBOX-LIST"||t.tagName==="APP-CHECKBOX-LIST")&&t.setAttribute("all-active",this.getAttribute("all-active"))})}),this.getAttribute("all-active")=="true"?this.checkbox.checked=!0:this.checkbox.checked=!1}connectedCallback(){this.setAttribute("is-active","false"),this.setAttribute("all-active","false"),this.shadow.innerHTML=`
            
            <div class="accordion-item">

                <div class="accordion-checkbox">
                <input type="checkbox"></input>                

                <button type="button" class="accordion-btn">
                    <span class="accordion-title"></span>
                    <span class="accordion-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                        </svg>
                    </span>
                </button>

                </div>

                <div class="accordion-content">
                    <slot></slot>
                </div>
            </div>
            `,this.accordionTitle=this.shadow.querySelector(".accordion-title"),this.accordionTitle&&(this.accordionTitle.textContent=this.title),this.accordionContent=this.shadow.querySelector(".accordion-content"),this.accordionIcon=this.shadow.querySelector(".accordion-icon");const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/accordion.css"),this.shadow.append(e),this.accordionBtn=this.shadow.querySelector(".accordion-btn"),this.accordionBtn.addEventListener("click",()=>{this.accordionContent=this.shadow.querySelector(".accordion-content"),this.getAttribute("is-active")==="true"?(this.setAttribute("is-active","false"),this.accordionContent.classList.remove("accordion-show"),this.accordionIcon.classList.remove("accordion-icon-active")):(this.setAttribute("is-active","true"),this.accordionContent.classList.add("accordion-show"),this.accordionIcon.classList.add("accordion-icon-active"));const s=new CustomEvent("accordionChanged",{detail:{name:"is-active",oldValue:this.getAttribute("is-active"),newValue:this.getAttribute("is-active")}});this.dispatchEvent(s)}),this.classList.contains("last-accordion")&&this.accordionContent.classList.add("last-accordion"),this.checkbox=this.shadow.querySelector('input[type="checkbox"]'),this.getAttribute("all-active")=="true"?this.checkbox.checked=!0:this.checkbox.checked=!1,this.checkbox.addEventListener("change",s=>{const t=s.target.checked;this.setAttribute("all-active",t+"")}),this.slots=this.shadow.querySelectorAll("slot")}attributeChangedCallback(e,s,t){e=="is-active"&&s!==null&&t!==null&&t!=s&&(this.getAttribute("is-active")==="true"?(this.accordionContent.classList.add("accordion-show"),this.accordionIcon.classList.add("accordion-icon-active")):(this.accordionContent.classList.remove("accordion-show"),this.accordionIcon.classList.remove("accordion-icon-active"))),e=="all-active"&&s!==null&&t!==null&&t!=s&&this.render()}}u(x,"observedAttributes",["is-active","all-active"]);customElements.define("app-accordion",x);class T extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){this.input&&(this.input.setAttribute("value",this.getAttribute("value")),this.input.value=this.getAttribute("value"))}connectedCallback(){this.shadow.innerHTML=`
            <input type="search" name="search" id="search" placeholder="Cerca per livelli..." value="">
            `,this.input=this.shadow.querySelector("input");const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/search.css"),this.shadow.append(e),this.input.addEventListener("input",()=>{this.setAttribute("value",this.input.value)})}attributeChangedCallback(e,s,t){const i=new CustomEvent("searchValueChanged",{detail:{name:e,oldValue:s,newValue:t}});t!=s&&(this.dispatchEvent(i),this.render())}}u(T,"observedAttributes",["value"]);customElements.define("app-searchbar",T);class O extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <a id="menu-toggle" class="menu-toggle">
                <span class="menu-toggle-bar menu-toggle-bar--top"></span>
                <span class="menu-toggle-bar menu-toggle-bar--middle"></span>
                <span class="menu-toggle-bar menu-toggle-bar--bottom"></span>
            </a>
            `,this.setAttribute("is-open","false");let e=this.getAttribute("is-open");this.a=this.shadow.querySelector("a");const s=document.createElement("link");s.setAttribute("rel","stylesheet"),s.setAttribute("href","./css/drawer-toggle.css"),this.shadow.append(s),this.a.addEventListener("click",()=>{e=this.getAttribute("is-open")==="true",this.setAttribute("is-open",!e+"")})}attributeChangedCallback(e,s,t){if(e==="is-open"){this.a&&(t==="true"?this.a.classList.add("nav-open"):this.a.classList.remove("nav-open"));const i=new CustomEvent("drawerToggled",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}}}u(O,"observedAttributes",["is-open"]);customElements.define("app-drawer-toggle",O);class q extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){if(this.tags=JSON.parse(this.getAttribute("data")),this.div.innerHTML="",this.tags)for(let e=0;e<this.tags.length;e++)this.span=document.createElement("span"),this.span.textContent=this.tags[e],this.span.setAttribute("name",this.tags[e]),this.span.setAttribute("tabindex",e+1),this.div.append(this.span);this.spans=this.shadow.querySelectorAll("span"),this.spans.forEach(e=>{e.addEventListener("click",()=>{this.setAttribute("selected",e.getAttribute("name"))})})}connectedCallback(){this.shadow.innerHTML=`
            <div></div>
            `,this.selectedSpan=0,this.div=this.shadow.querySelector("div"),this.setAttribute("selected","");const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/autocomplete.css"),this.shadow.append(e)}attributeChangedCallback(e,s,t){if(e=="data"&&t!=s&&this.render(),e=="selected"&&t!=s){const i=new CustomEvent("autocompleteSelected",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i),this.div.innerHTML=""}e=="last-key-pressed"&&t!="Enter"&&t!="ArrowDown"&&t!="ArrowUp"&&(this.selectedSpan=0,this.render()),(e=="last-key-pressed"&&t=="ArrowUp"||t=="ArrowDown")&&(t=="ArrowDown"&&(this.selectedSpan++,this.selectedSpan==this.spans.length+1&&(this.selectedSpan=1),this.shadow.querySelector(`span[tabindex="${this.selectedSpan}"]`).focus()),t=="ArrowUp"&&(this.selectedSpan++,this.selectedSpan==this.spans.length+1&&(this.selectedSpan=1),this.shadow.querySelector(`span[tabindex="${this.selectedSpan}"]`).focus())),e=="last-key-pressed"&&t=="Enter"&&(this.setAttribute("selected",this.shadow.activeElement.getAttribute("name")),this.div.innerHTML="")}}u(q,"observedAttributes",["data","selected","last-key-pressed"]);customElements.define("app-autocomplete",q);class M extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){this.getAttribute("is-enable")=="true"?this.input.disabled=!1:this.input.disabled=!0}connectedCallback(){this.shadow.innerHTML=`
            <div>
                <label>Opacità</label>
                <input type="range">
            </div>
            `,this.input=this.shadow.querySelector("input"),this.hasAttribute("is-enable")||(this.setAttribute("is-enable","false"),this.input.disabled=!0),this.input.setAttribute("min",0),this.input.setAttribute("max",1),this.input.setAttribute("step",.1),this.input.value=this.getAttribute("opacity"),this.input.addEventListener("change",()=>{this.setAttribute("opacity",this.input.value)});const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/tool.css"),this.shadow.append(e)}attributeChangedCallback(e,s,t){if(e=="opacity"&&t!=s){const i=new CustomEvent("opacityChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}e=="is-enable"&&s!==null&&t!==null&&t!==s&&this.render()}}u(M,"observedAttributes",["is-enable","opacity"]);customElements.define("app-opacity-slider",M);const $="./json/categories.json",b=new J;b.setCamera();const f=document.querySelector("#categories-section");B($).then(a=>(y(a,f),a)).then(a=>{const e=document.querySelector("main"),s=document.querySelector("app-drawer-toggle"),t=document.querySelector("#drawer"),i=document.querySelectorAll("app-checkbox-list"),o=document.querySelectorAll(".category-accordion"),r=document.querySelectorAll(".layer-accordion"),n=document.querySelector("app-searchbar"),l=document.querySelector("#drawer-title"),c=document.querySelector("app-autocomplete");s.addEventListener("drawerToggled",d=>{d.detail.newValue=="true"?t.classList.add("drawer-open"):t.classList.remove("drawer-open")}),b.viewer.screenSpaceEventHandler.setInputAction(function(d){b.onClick(d.position).then(h=>{console.log(h);const p=F(h,a);let v=document.querySelectorAll("app-infobox");p&&Object.keys(p).length!==0&&W(v,p,e),s.setAttribute("is-open","false")})},Cesium.ScreenSpaceEventType.LEFT_CLICK);const m=[];A(i,m,b),w(o,r),n.addEventListener("searchValueChanged",d=>{f.innerHTML="";const h=d.detail.newValue.toLowerCase();l.textContent=`Livelli per: ${h}`;let p=JSON.parse(JSON.stringify(a));if(_(p,h),h=="")y(a,f),l.textContent="Categorie";else if(y(p,f),!f.innerHTML){const g=document.createElement("p");g.innerText=`Nessun livello trovato per ${h}`,f.append(g)}const v=document.querySelectorAll("app-checkbox-list");A(v,m,b);const N=document.querySelectorAll(".category-accordion"),I=document.querySelectorAll(".layer-accordion");if(w(N,I),h.length>=2){const g=R(a,h);c.setAttribute("data",JSON.stringify(g))}else c.setAttribute("data",JSON.stringify(""))}),c.addEventListener("autocompleteSelected",d=>{const h=d.detail.newValue;n.setAttribute("value",h)}),document.addEventListener("keydown",d=>{c.setAttribute("last-key-pressed",d.key)})});
