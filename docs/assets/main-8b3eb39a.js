var U=Object.defineProperty;var j=(a,e,s)=>e in a?U(a,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[e]=s;var u=(a,e,s)=>(j(a,typeof e!="symbol"?e+"":e,s),s);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))t(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function s(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function t(i){if(i.ep)return;i.ep=!0;const o=s(i);fetch(i.href,o)}})();class Y{constructor(){const e=document.querySelector("app-map");Cesium.Ion.defaultAccessToken="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIxMmEyNDlkYS1iYTg4LTQ4MDktOTU0ZS05Yjg2ZTcyZGI1ZGMiLCJpZCI6MTY5MDU3LCJpYXQiOjE2OTU5MDI3ODB9.xSyAfYggSQ_UaYmqQLfI4Rf-Hl_Ip0ubYKLQakKadvA",this.viewer=new Cesium.Viewer(e,{baseLayerPicker:!1,geocoder:!1,timeline:!1,animation:!1,homeButton:!1,navigationInstructionsInitiallyVisible:!1,navigationHelpButton:!1,sceneModePicker:!1,fullscreenButton:!1,infoBox:!1}),this.viewer.screenSpaceEventHandler.setInputAction(this.onClick.bind(this),Cesium.ScreenSpaceEventType.LEFT_CLICK)}changeTheme(e){const s=JSON.parse(e),t=new Cesium.WebMapTileServiceImageryProvider({url:s.url,layer:s.layer,style:"default",format:"image/jpeg",maximumLevel:19,tileMatrixSetID:"default",credit:new Cesium.Credit(s.credit)});this.viewer.imageryLayers.addImageryProvider(t)}static getImageryProvider(){return new Cesium.WebMapTileServiceImageryProvider({url:"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{TileMatrix}/{TileCol}/{TileRow}.png",layer:"carto-light",style:"default",format:"image/jpeg",maximumLevel:19,tileMatrixSetID:"default",credit:new Cesium.Credit('&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>')})}async onClick(e){const s=this.viewer.scene.pick(e);if(s)return s.id}addLayerWMS(e,s){const t=new Cesium.WebMapServiceImageryProvider({url:e,layers:s});console.log(this.viewer.imageryLayers),this.viewer.imageryLayers.addImageryProvider(t),console.log(this.viewer.imageryLayers)}removeLayerWMS(e){const s=this.viewer.imageryLayers,t=s.length;for(let i=0;i<t;i++){const o=s.get(i);if(o._imageryProvider._layers===e){s.remove(o);return}}}addLayersWFS(e,s,t){let i="YELLOW",o="YELLOW",n="YELLOW",r=.5;t&&t.color&&(i=t.color.toUpperCase(),o=t.color.toUpperCase(),n=t.color.toUpperCase()),t&&t.opacity&&(r=t.opacity);const d=`${e}?service=WFS&typeName=${s}&outputFormat=application/json&request=GetFeature&srsname=EPSG:4326`;fetch(d).then(l=>l.json()).then(l=>{console.log(l),this.viewer.dataSources.add(Cesium.GeoJsonDataSource.load(l,{stroke:Cesium.Color[i].withAlpha(parseFloat(r)),strokeWidth:2,fill:Cesium.Color[o].withAlpha(parseFloat(r))})).then(p=>{p.entities.values.forEach(h=>{h.billboard=void 0,h.point=new Cesium.PointGraphics({pixelSize:18,color:Cesium.Color[n].withAlpha(parseFloat(r)),outlineColor:Cesium.Color[n].withAlpha(parseFloat(r)),outlineWidth:2})});const f=100,v=3,g=!0;p.clustering.enabled=g,p.clustering.pixelRange=f,p.clustering.minimumClusterSize=v;let m;Cesium.defined(m)?(m(),m=void 0):m=p.clustering.clusterEvent.addEventListener(function(h,c){c.billboard.show=!1,c.point.show=!0,c.point.pixelSize=48,h.length>=50?(c.point.color=Cesium.Color.RED.withAlpha(parseFloat(r)),c.point.outlineColor=Cesium.Color.RED):h.length>=40?(c.point.color=Cesium.Color.ORANGE.withAlpha(parseFloat(r)),c.point.outlineColor=Cesium.Color.ORANGE):h.length>=30?(c.point.color=Cesium.Color.YELLOW.withAlpha(parseFloat(r)),c.point.outlineColor=Cesium.Color.YELLOW):h.length>=20?(c.point.color=Cesium.Color.GREEN.withAlpha(parseFloat(r)),c.point.outlineColor=Cesium.Color.GREEN):h.length>=10?(c.point.color=Cesium.Color.BLUE.withAlpha(parseFloat(r)),c.point.outlineColor=Cesium.Color.BLUE):(c.point.color=Cesium.Color.VIOLET.withAlpha(parseFloat(r)),c.point.outlineColor=Cesium.Color.VIOLET),c.label.show=!0,c.label.text=h.length.toLocaleString(),c.label.verticalOrigin=Cesium.VerticalOrigin.CENTER,c.label.horizontalOrigin=Cesium.HorizontalOrigin.CENTER,c.label.pixelOffset=new Cesium.Cartesian2(0,0),c.label.pixelOffsetScaleByDistance=void 0,c.label.position.z+=5})})})}removeLayerWFS(e){const s=this.viewer._dataSourceCollection._dataSources,t=s.length;for(let i=0;i<t;i++){const o=s.get(i);if(o._imageryProvider._layers===e){s.remove(o);return}}}removeAllLayers(){this.viewer.imageryLayers.removeAll()}getActiveLayers(){return this.viewer.imageryLayers._layers}setCamera(){const e=Cesium.Cartesian3.fromDegrees(8.909041078781357,44.410209942448475,4e3);this.viewer.camera.flyTo({destination:e,orientation:{heading:Cesium.Math.toRadians(0),pitch:Cesium.Math.toRadians(-90),roll:0}})}async addBuilding(){const e=await Cesium.createOsmBuildingsAsync();this.viewer.scene.primitives.add(e)}}const w=(a,e)=>{a.categories.forEach(s=>{const t=document.createElement("app-accordion");t.setAttribute("title",s.name),t.classList.add("category-accordion"),s.groups.forEach((i,o,n)=>{const r=document.createElement("app-accordion");o===n.length-1&&r.classList.add("last-accordion"),r.setAttribute("title",i.name),r.classList.add("layer-accordion");const d=document.createElement("app-checkbox-list");d.setAttribute("input",JSON.stringify(i.layers)),r.append(d),t.append(r),e.append(t)})})},G=(a,e)=>{a.categories.forEach(s=>{s.groups.forEach(t=>{t.layers=t.layers.filter(i=>i.tags?i.tags.some(o=>o.includes(e)):!1),t.layers.length===0&&(s.groups=s.groups.filter(i=>i!==t))}),s.groups.length===0&&(a.categories=a.categories.filter(t=>t!==s))})};async function k(a){const e=await fetch(a).then(t=>t.json()),s=e.categories;for(const t of s){const i=[];for(let n=0;n<t.groups.length;n++){let r=t.groups[n];const d=await fetch(r).then(l=>{if(l)return l.json()}).catch(l=>console.log(l));i.push(d)}const o=await Promise.all(i).then(n=>n);t.groups.splice(0,t.groups.length),o.forEach(n=>{t.groups.push(n)})}return e}const C=async(a,e,s)=>{for(const t of a)t.addEventListener("checkboxListChanged",async i=>{i.detail.input.forEach(r=>{const d=e.findIndex(l=>l.layer===r.layer);d!==-1&&e.splice(d,1)}),JSON.parse(i.detail.newValue).forEach(r=>{e.push(r)}),await s.viewer.dataSources.removeAll();for(const r of e)s.addLayersWFS(r.layer_url_wfs,r.layer,r.style);console.log("Active layers:"),console.log(e)})},$=(a,e)=>{if(a!=null){let s="";a.id.includes(".")&&(s=a.id.split(".")[0]);const t=S(e,s),i=t.name,o=t.relevant_properties;return K(a.properties,o,i)}};function S(a,e){for(const s in a){const t=a[s];if(Array.isArray(t)||typeof t=="object"){const i=S(t,e);if(i)return i}else if(typeof t=="string"&&t.includes(e))return a}return null}function K(a,e,s){const t={};if(e){for(const i of e)i.property_name&&a[i.property_name]&&(t[i.display_name]=a[i.property_name]._value);return t.Title=s,t}return t}const E=(a,e)=>{a.forEach(s=>{s.addEventListener("accordionChanged",t=>{a.forEach(i=>{i!=t.target&&i.setAttribute("is-active","false")}),e.forEach(i=>{i.setAttribute("is-active","false")})})}),e.forEach(s=>{s.addEventListener("accordionChanged",t=>{e.forEach(i=>{i!=t.target&&i.setAttribute("is-active","false")})})})},X=(a,e)=>{let s=[];return a.categories.forEach(i=>{i.groups.forEach(o=>{o.layers.forEach(n=>{n.tags&&n.tags.forEach(r=>{r.includes(e)&&s.push(r)})})})}),[...new Set(s)]};let L=0;function Q(a,e,s){let t=!1;if(a.forEach(i=>{i.getAttribute("data")===JSON.stringify(e)&&(t=!0)}),!t&&e){const i=document.createElement("app-infobox");i.setAttribute("data",JSON.stringify(e)),L++,i.setAttribute("uuid",L),s.append(i)}}const Z=(a,e)=>{switch(e.getAttribute("zoom-type")){case"in":e.addEventListener("click",()=>{a.viewer.camera.zoomIn(500)});break;case"out":e.addEventListener("click",()=>{a.viewer.camera.zoomOut(500)});break}},V=(a,e)=>{const s=a.viewer.imageryLayers._layers[1];a.viewer.imageryLayers.remove(s),e!=""&&a.changeTheme(e)},ee=a=>{let e=[];a.categories.forEach(t=>{t.groups.forEach(i=>{i.layers.forEach(o=>{o.tags&&o.tags.forEach(n=>{e.push(n)})})})});const s=[...new Set(e)];return s.sort(),s},te=(a,e)=>{a.categories.forEach(s=>{s.groups.forEach(t=>{t.layers=t.layers.filter(i=>i.tags?e.some(o=>i.tags.includes(o)):!1),t.layers.length===0&&(s.groups=s.groups.filter(i=>i!==t))}),s.groups.length===0&&(a.categories=a.categories.filter(t=>t!==s))})},se=[self.location.hostname,"fonts.gstatic.com","fonts.googleapis.com","cdn.jsdelivr.net"],ie=a=>{var e=Date.now(),s=new URL(a.url);return s.protocol=self.location.protocol,s.hostname===self.location.hostname&&(s.search+=(s.search?"&":"?")+"cache-bust="+e),s.href};self.addEventListener("activate",a=>{a.waitUntil(self.clients.claim())});self.addEventListener("fetch",a=>{if(se.indexOf(new URL(a.request.url).hostname)>-1){const e=caches.match(a.request),s=ie(a.request),t=fetch(s,{cache:"no-store"}),i=t.then(o=>o.clone());a.respondWith(Promise.race([t.catch(o=>e),e]).then(o=>o||t).catch(o=>{})),a.waitUntil(Promise.all([i,caches.open("pwa-cache")]).then(([o,n])=>o.ok&&n.put(a.request,o)).catch(o=>{}))}});class x extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <div class="checkbox">
                <input type="checkbox" id="checkbox">
                <div class="legend"></div>
                <label for="checkbox">Label</label>
            </div>                      
            `,this.checkbox=this.shadow.querySelector("input"),this.hasAttribute("is-checked")&&this.getAttribute("is-checked")=="true"?(this.setAttribute("is-checked",this.getAttribute("is-checked")),this.checkbox.checked=!0):(this.setAttribute("is-checked","false"),this.checkbox.checked=!1),this.label=this.shadow.querySelector("label"),this.hasAttribute("data")&&(this.label.innerHTML=JSON.parse(this.getAttribute("data")).name),this.legend=this.shadow.querySelector(".legend");const e=JSON.parse(this.getAttribute("data")).style.color;this.legend.style.backgroundColor=e;const s=JSON.parse(this.getAttribute("data")).components;if(s!=null&&s.length!=0){this.details=document.createElement("details"),this.details.innerHTML=`
                <summary>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                    </svg>                
                </summary>
                `;for(const i of s)this.component=document.createElement(`${i}`),i=="app-opacity-slider"&&(this.opacity=JSON.parse(this.getAttribute("data")).style.opacity,this.component.setAttribute("opacity",this.opacity),this.component.addEventListener("opacityChanged",o=>{const n=JSON.parse(this.getAttribute("data"));n.style.opacity=o.detail.newValue,this.setAttribute("data",JSON.stringify(n))}));this.details.append(this.component),this.shadow.append(this.details),this.setAttribute("is-details-open","false")}this.checkbox.addEventListener("change",i=>{const o=i.target.checked;this.setAttribute("is-checked",o+"")}),this.details&&this.details.addEventListener("toggle",i=>{i.target.open?this.setAttribute("is-details-open","true"):this.setAttribute("is-details-open","false")});const t=document.createElement("link");t.setAttribute("rel","stylesheet"),t.setAttribute("href","./css/checkbox.css"),this.shadow.append(t)}attributeChangedCallback(e,s,t){if(e=="is-checked"&&s!==null&&t!==null&&t!==s){t=="true"?this.checkbox.checked=!0:this.checkbox.checked=!1;const i=new CustomEvent("checkboxChanged",{detail:{name:e,oldValue:s,newValue:t}});this.toolOpacity=this.shadow.querySelector("app-opacity-slider"),this.toolOpacity&&this.toolOpacity.setAttribute("is-enable",t),this.dispatchEvent(i)}if(e=="data"&&t!==s){const i=new CustomEvent("opacityChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}if(e=="is-details-open"&&s!=null&&t!=null&&t!=s){const i=new CustomEvent("detailStatusChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i),this.getAttribute("is-details-open")=="true"?this.details.setAttribute("open",""):this.details.removeAttribute("open")}}}u(x,"observedAttributes",["is-checked","data","is-details-open"]);customElements.define("app-checkbox",x);class T extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <div></div>
            `,this.div=this.shadow.querySelector("div"),this.setAttribute("all-active","false");const e=document.createElement("link");if(e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/checkbox-list.css"),this.shadow.append(e),!!this.hasAttribute("input")){this.input=JSON.parse(this.getAttribute("input")),this.data=[],this.checkboxes=[];for(let s=0;s<this.input.length;s++)this.checkbox=document.createElement("app-checkbox"),this.checkbox.setAttribute("is-checked","false"),this.checkbox.setAttribute("data",JSON.stringify(this.input[s])),this.checkboxes.push(this.checkbox),this.div.append(this.checkbox);this.checkboxes.forEach(s=>{s.addEventListener("checkboxChanged",()=>{this.itemData=JSON.parse(s.getAttribute("data"));const t=this.data.findIndex(i=>i.layer===this.itemData.layer);t!==-1?this.data.splice(t,1):this.data.push(this.itemData),this.setAttribute("data",JSON.stringify(this.data))}),s.addEventListener("opacityChanged",t=>{this.itemData=JSON.parse(s.getAttribute("data")),this.itemData.opacity=t.detail.newValue;const i=this.data.findIndex(o=>o.layer===this.itemData.layer);i!==-1?(this.data.splice(i,1),this.data.push(this.itemData)):this.data.push(this.itemData),this.setAttribute("data",JSON.stringify(this.data))}),s.addEventListener("detailStatusChanged",t=>{t.detail.newValue=="true"&&this.checkboxes.forEach(i=>{i!==s&&i.setAttribute("is-details-open","false")})})})}}attributeChangedCallback(e,s,t){if(e=="data"&&t!=s){const i=new CustomEvent("checkboxListChanged",{detail:{name:"data",oldValue:s,newValue:t,input:this.input}});this.dispatchEvent(i)}e=="all-active"&&s!=null&&t!=null&&t!=s&&this.checkboxes.forEach(i=>{i.setAttribute("is-checked",this.getAttribute("all-active"))})}}u(T,"observedAttributes",["data","all-active"]);customElements.define("app-checkbox-list",T);class O extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <div class="infobox">
                <div class="drag-handler">
                    <svg id="grip-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                    </svg>

                    <svg id="close-icon" viewPort="0 0 12 12" version="1.1" xmlns="http://www.w3.org/2000/svg">
                        <line x1="1" y1="11" x2="11" y2="1" stroke="black" stroke-width="2"/>
                        <line x1="1" y1="1" x2="11" y2="11" stroke="black" stroke-width="2"/>
                    </svg>
                </div>

                <div class="info-content"></div>
            </div>
            `;const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/infobox.css"),this.shadow.append(e),this.info=this.shadow.querySelector(".info-content"),this.data=JSON.parse(this.getAttribute("data"));const s={Title:this.data.Title};Object.keys(s).forEach(o=>{const n=s[o],r=document.createElement("h3");r.innerText=n,this.info.append(r)});const t={...this.data};delete t.Title,Object.keys(t).forEach(o=>{const n=t[o];this.text=document.createElement("p"),this.text.innerHTML=`
                <span class="info-key">${o}:</span> <span class="info-value">${n}</span>
                `,this.info.append(this.text)}),this.closeIcon=this.shadow.querySelector("#close-icon"),this.closeIcon.addEventListener("click",()=>{const o=new CustomEvent("infoboxRemoved",{detail:{uuid:this.getAttribute("uuid")}});this.dispatchEvent(o),this.remove()}),this.div=this.shadow.querySelector(".infobox"),this.dragHandler=this.shadow.querySelector(".drag-handler"),(o=>{let n=!1,r,d;this.dragHandler.addEventListener("mousedown",l=>{n=!0,r=l.clientX-o.getBoundingClientRect().left,d=l.clientY-o.getBoundingClientRect().top}),document.addEventListener("mousemove",l=>{n&&(o.style.left=l.clientX-r+"px",o.style.top=l.clientY-d+"px")}),document.addEventListener("mouseup",()=>{n=!1,this.setAttribute("position",JSON.stringify(o.getBoundingClientRect()))})})(this.div)}attributeChangedCallback(e,s,t){if(t!=s){const i=new CustomEvent("positionChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}}}u(O,"observedAttributes",["position"]);customElements.define("app-infobox",O);class M extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){this.slots.forEach(e=>{e.assignedNodes().forEach(t=>{(t.nodeName==="APP-ACCORDION"||t.tagName==="APP-ACCORDION")&&t.setAttribute("all-active",this.getAttribute("all-active")),(t.nodeName==="APP-CHECKBOX-LIST"||t.tagName==="APP-CHECKBOX-LIST")&&t.setAttribute("all-active",this.getAttribute("all-active"))})}),this.getAttribute("all-active")=="true"?this.checkbox.checked=!0:this.checkbox.checked=!1}connectedCallback(){this.setAttribute("is-active","false"),this.setAttribute("all-active","false"),this.shadow.innerHTML=`
            
            <div class="accordion-item">

                <div class="accordion-checkbox">
                <input type="checkbox"></input>                

                <button type="button" class="accordion-btn">
                    <span class="accordion-title"></span>
                    <span class="accordion-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
                        </svg>
                    </span>
                </button>

                </div>

                <div class="accordion-content">
                    <slot></slot>
                </div>
            </div>
            `,this.accordionTitle=this.shadow.querySelector(".accordion-title"),this.accordionTitle&&(this.accordionTitle.textContent=this.title),this.accordionContent=this.shadow.querySelector(".accordion-content"),this.accordionIcon=this.shadow.querySelector(".accordion-icon");const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/accordion.css"),this.shadow.append(e),this.accordionBtn=this.shadow.querySelector(".accordion-btn"),this.accordionBtn.addEventListener("click",()=>{this.accordionContent=this.shadow.querySelector(".accordion-content"),this.getAttribute("is-active")==="true"?(this.setAttribute("is-active","false"),this.accordionContent.classList.remove("accordion-show"),this.accordionIcon.classList.remove("accordion-icon-active")):(this.setAttribute("is-active","true"),this.accordionContent.classList.add("accordion-show"),this.accordionIcon.classList.add("accordion-icon-active"));const s=new CustomEvent("accordionChanged",{detail:{name:"is-active",oldValue:this.getAttribute("is-active"),newValue:this.getAttribute("is-active")}});this.dispatchEvent(s)}),this.classList.contains("last-accordion")&&this.accordionContent.classList.add("last-accordion"),this.checkbox=this.shadow.querySelector('input[type="checkbox"]'),this.getAttribute("all-active")=="true"?this.checkbox.checked=!0:this.checkbox.checked=!1,this.checkbox.addEventListener("change",s=>{const t=s.target.checked;this.setAttribute("all-active",t+"")}),this.slots=this.shadow.querySelectorAll("slot")}attributeChangedCallback(e,s,t){e=="is-active"&&s!==null&&t!==null&&t!=s&&(this.getAttribute("is-active")==="true"?(this.accordionContent.classList.add("accordion-show"),this.accordionIcon.classList.add("accordion-icon-active")):(this.accordionContent.classList.remove("accordion-show"),this.accordionIcon.classList.remove("accordion-icon-active"))),e=="all-active"&&s!==null&&t!==null&&t!=s&&this.render()}}u(M,"observedAttributes",["is-active","all-active"]);customElements.define("app-accordion",M);class q extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){this.input&&(this.input.setAttribute("value",this.getAttribute("value")),this.input.value=this.getAttribute("value"))}connectedCallback(){this.shadow.innerHTML=`
            <input type="search" name="search" id="search" placeholder="Cerca per livelli..." value="">
            `,this.input=this.shadow.querySelector("input");const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/search.css"),this.shadow.append(e),this.input.addEventListener("input",()=>{this.setAttribute("value",this.input.value)})}attributeChangedCallback(e,s,t){const i=new CustomEvent("searchValueChanged",{detail:{name:e,oldValue:s,newValue:t}});t!=s&&(this.dispatchEvent(i),this.render())}}u(q,"observedAttributes",["value"]);customElements.define("app-searchbar",q);class N extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <div class="menu-toggle">
                <a id="menu-toggle">
                    <span class="menu-toggle-bar menu-toggle-bar--top"></span>
                    <span class="menu-toggle-bar menu-toggle-bar--middle"></span>
                    <span class="menu-toggle-bar menu-toggle-bar--bottom"></span>
                </a>
            </div>
            `,this.setAttribute("is-open","false");let e=this.getAttribute("is-open");this.btn=this.shadow.querySelector(".menu-toggle");const s=document.createElement("link");s.setAttribute("rel","stylesheet"),s.setAttribute("href","./css/drawer-toggle.css"),this.shadow.append(s),this.btn.addEventListener("click",()=>{e=this.getAttribute("is-open")==="true",this.setAttribute("is-open",!e+"")})}attributeChangedCallback(e,s,t){if(e==="is-open"){this.btn&&(t==="true"?this.btn.classList.add("nav-open"):this.btn.classList.remove("nav-open"));const i=new CustomEvent("drawerToggled",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}}}u(N,"observedAttributes",["is-open"]);customElements.define("app-drawer-toggle",N);class I extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){if(this.tags=JSON.parse(this.getAttribute("data")),this.div.innerHTML="",this.tags)for(let e=0;e<this.tags.length;e++)this.span=document.createElement("span"),this.span.textContent=this.tags[e],this.span.setAttribute("name",this.tags[e]),this.span.setAttribute("tabindex",e+1),this.div.append(this.span);this.spans=this.shadow.querySelectorAll("span"),this.spans.forEach(e=>{e.addEventListener("click",()=>{this.setAttribute("selected",e.getAttribute("name"))})})}connectedCallback(){this.shadow.innerHTML=`
            <div></div>
            `,this.selectedSpan=0,this.div=this.shadow.querySelector("div"),this.setAttribute("selected","");const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/autocomplete.css"),this.shadow.append(e)}attributeChangedCallback(e,s,t){if(e=="data"&&t!=s&&this.render(),e=="selected"&&t!=s){const i=new CustomEvent("autocompleteSelected",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i),this.div.innerHTML=""}e=="last-key-pressed"&&t!="Enter"&&t!="ArrowDown"&&t!="ArrowUp"&&(this.selectedSpan=0,this.render()),(e=="last-key-pressed"&&t=="ArrowUp"||t=="ArrowDown")&&(t=="ArrowDown"&&(this.selectedSpan++,this.selectedSpan==this.spans.length+1&&(this.selectedSpan=1),this.shadow.querySelector(`span[tabindex="${this.selectedSpan}"]`).focus()),t=="ArrowUp"&&(this.selectedSpan++,this.selectedSpan==this.spans.length+1&&(this.selectedSpan=1),this.shadow.querySelector(`span[tabindex="${this.selectedSpan}"]`).focus())),e=="last-key-pressed"&&t=="Enter"&&(this.setAttribute("selected",this.shadow.activeElement.getAttribute("name")),this.div.innerHTML="")}}u(I,"observedAttributes",["data","selected","last-key-pressed"]);customElements.define("app-autocomplete",I);class H extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){this.getAttribute("is-enable")=="true"?this.input.disabled=!1:this.input.disabled=!0}connectedCallback(){this.shadow.innerHTML=`
            <div>
                <label>Opacità</label>
                <input type="range">
            </div>
            `,this.input=this.shadow.querySelector("input"),this.hasAttribute("is-enable")||(this.setAttribute("is-enable","false"),this.input.disabled=!0),this.input.setAttribute("min",0),this.input.setAttribute("max",1),this.input.setAttribute("step",.1),this.input.value=this.getAttribute("opacity"),this.input.addEventListener("change",()=>{this.setAttribute("opacity",this.input.value)});const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/tool.css"),this.shadow.append(e)}attributeChangedCallback(e,s,t){if(e=="opacity"&&t!=s){const i=new CustomEvent("opacityChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}e=="is-enable"&&s!==null&&t!==null&&t!==s&&this.render()}}u(H,"observedAttributes",["is-enable","opacity"]);customElements.define("app-opacity-slider",H);class z extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){this.getAttribute("is-selected")=="true"?(this.chip.classList.add("selected"),this.checkbox.checked=!0):(this.chip.classList.remove("selected"),this.checkbox.checked=!1)}connectedCallback(){this.shadow.innerHTML=`
            <label for="chip">
                <input type="checkbox" id="chip">
                <span class="chip-title"></span>               
            </label>
            `,this.chip=this.shadow.querySelector("label"),this.span=this.shadow.querySelector("span"),this.checkbox=this.shadow.querySelector("input"),this.hasAttribute("tag")&&(this.span.innerText=this.getAttribute("tag"));const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/chip.css"),this.shadow.append(e),this.checkbox.addEventListener("change",s=>{const t=s.target.checked;this.setAttribute("is-selected",t+"")})}attributeChangedCallback(e,s,t){if(e=="is-selected"&&t!=s){const i=new CustomEvent("chipChanged",{detail:{name:e,newValue:t,oldValue:s,tag:this.getAttribute("tag")}});this.dispatchEvent(i),this.render()}}}u(z,"observedAttributes",["is-selected"]);customElements.define("app-chip",z);class B extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){JSON.parse(this.getAttribute("tags")).length===0?this.btn.disabled=!0:this.btn.disabled=!1}connectedCallback(){this.shadow.innerHTML=`
            <button type="submit">Submit</button>
            `,this.btn=this.shadow.querySelector("button"),this.hasAttribute("tags")||(this.btn.disabled=!0),this.btn.addEventListener("click",()=>{localStorage.setItem("selectedTags",this.getAttribute("tags")),window.location.href="/raise/map.html"});const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/button.css"),this.shadow.append(e)}attributeChangedCallback(e,s,t){e=="tags"&&t!=s&&this.render()}}u(B,"observedAttributes",["tags"]);customElements.define("app-btn",B);class J extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <a href="${this.hasAttribute("link")?this.getAttribute("link"):"/"}">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
                    <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
                    <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
                </svg>
            </a>
            `;const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/icon.css"),this.shadow.append(e)}attributeChangedCallback(){}}u(J,"observedAttributes",[]);customElements.define("app-icon-btn",J);class P extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){switch(this.shadow.innerHTML=`
            <div class="zoom-icon"></div>
            `,this.div=this.shadow.querySelector(".zoom-icon"),this.getAttribute("zoom-type")){case"in":this.div.innerHTML=`
                        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                        </svg>
                    `;break;case"out":this.div.innerHTML=`
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-dash" viewBox="0 0 16 16">
                        <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z"/>
                    </svg>
                    `;break}const e=document.createElement("link");e.setAttribute("rel","stylesheet"),e.setAttribute("href","./css/zoom-button.css"),this.shadow.append(e)}attributeChangedCallback(){}}u(P,"observedAttributes",[]);customElements.define("app-zoom-btn",P);class _ extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"closed"})}render(){}connectedCallback(){this.shadow.innerHTML=`
            <div id="change-theme-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-palette2" viewBox="0 0 16 16">
                    <path d="M0 .5A.5.5 0 0 1 .5 0h5a.5.5 0 0 1 .5.5v5.277l4.147-4.131a.5.5 0 0 1 .707 0l3.535 3.536a.5.5 0 0 1 0 .708L10.261 10H15.5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-.5.5H3a2.99 2.99 0 0 1-2.121-.879A2.99 2.99 0 0 1 0 13.044m6-.21 7.328-7.3-2.829-2.828L6 7.188v5.647zM4.5 13a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0zM15 15v-4H9.258l-4.015 4H15zM0 .5v12.495V.5z"/>
                    <path d="M0 12.995V13a3.07 3.07 0 0 0 0-.005z"/>
                </svg>
            </div>
            `;const e=[{},{url:"https://tiles.stadiamaps.com/tiles/alidade_smooth/{TileMatrix}/{TileCol}/{TileRow}.png",layer:"stadia-light",credit:'&copy; <a href="https://www.stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'},{url:"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{TileMatrix}/{TileCol}/{TileRow}.png",layer:"stadia-dark",credit:'&copy; <a href="https://www.stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}];let s=0;this.setAttribute("theme",""),this.div=this.shadow.querySelector("#change-theme-icon"),this.div.addEventListener("click",()=>{if(s=(s+1)%e.length,s===0)this.setAttribute("theme","");else{const i=JSON.stringify(e[s]);this.setAttribute("theme",i)}});const t=document.createElement("link");t.setAttribute("rel","stylesheet"),t.setAttribute("href","./css/theme-icon.css"),this.shadow.append(t)}attributeChangedCallback(e,s,t){if(e=="theme"&&t!=s&&s!=null&&t!=null){const i=new CustomEvent("themeChanged",{detail:{name:e,oldValue:s,newValue:t}});this.dispatchEvent(i)}}}u(_,"observedAttributes",["theme"]);customElements.define("app-theme-icon",_);const D="./json/categories.json";async function ae(){const a=new Y;a.setCamera(),document.querySelectorAll("app-zoom-btn").forEach(h=>Z(a,h)),document.querySelector("app-theme-icon").addEventListener("themeChanged",h=>V(a,h.detail.newValue));const t=document.querySelector("#categories-section");let i=await k(D);if(localStorage.length!=0){let h=JSON.parse(JSON.stringify(i));te(h,JSON.parse(localStorage.selectedTags)),w(h,t),i=h}else w(i,t);const o=document.querySelector("main"),n=document.querySelector("app-drawer-toggle"),r=document.querySelector("#drawer"),d=document.querySelectorAll("app-checkbox-list"),l=document.querySelectorAll(".category-accordion"),p=document.querySelectorAll(".layer-accordion"),f=document.querySelector("app-searchbar"),v=document.querySelector("#drawer-title"),g=document.querySelector("app-autocomplete");n.addEventListener("drawerToggled",h=>{h.detail.newValue=="true"?r.classList.add("drawer-open"):r.classList.remove("drawer-open")}),a.viewer.screenSpaceEventHandler.setInputAction(function(h){a.onClick(h.position).then(c=>{if(console.log(c),typeof c=="object"&&!Array.isArray(c)){const b=$(c,i);let A=document.querySelectorAll("app-infobox");b&&Object.keys(b).length!==0&&Q(A,b,o),n.setAttribute("is-open","false")}})},Cesium.ScreenSpaceEventType.LEFT_CLICK);const m=[];C(d,m,a),E(l,p),f.addEventListener("searchValueChanged",h=>{t.innerHTML="";const c=h.detail.newValue.toLowerCase();v.textContent=`Livelli per: ${c}`;let b=JSON.parse(JSON.stringify(i));if(G(b,c),c=="")w(i,t),v.textContent="Categorie";else if(w(b,t),!t.innerHTML){const y=document.createElement("p");y.innerText=`Nessun livello trovato per ${c}`,t.append(y)}const A=document.querySelectorAll("app-checkbox-list");C(A,m,a);const F=document.querySelectorAll(".category-accordion"),W=document.querySelectorAll(".layer-accordion");if(E(F,W),c.length>=2){const y=X(i,c);g.setAttribute("data",JSON.stringify(y))}else g.setAttribute("data",JSON.stringify(""))}),g.addEventListener("autocompleteSelected",h=>{const c=h.detail.newValue;f.setAttribute("value",c)}),document.addEventListener("keydown",h=>{g.setAttribute("last-key-pressed",h.key)})}async function oe(){let a=await k(D);ee(a).forEach(d=>{let l=document.createElement("app-chip");l.setAttribute("tag",d),R.append(l)});let s=[];const t=document.querySelectorAll("app-chip"),i=document.querySelector("app-btn");t.forEach(d=>{d.addEventListener("chipChanged",l=>{l.detail.newValue=="true"?s.push(l.detail.tag):s=s.filter(p=>p!==l.detail.tag),i.setAttribute("tags",JSON.stringify(s))})}),localStorage.selectedTags&&JSON.parse(localStorage.selectedTags).forEach(l=>{t.forEach(p=>{p.getAttribute("tag")==l&&p.setAttribute("is-selected","true")})}),document.querySelector("#select-all-btn").addEventListener("click",()=>{t.forEach(d=>{d.setAttribute("is-selected","true")})}),document.querySelector("#reset-btn").addEventListener("click",()=>{t.forEach(d=>{d.setAttribute("is-selected","false")})}),document.querySelector("#clear-local-storage").addEventListener("click",()=>localStorage.clear())}const ne=document.querySelector("app-map");ne&&ae();const R=document.querySelector("#chips-section");R&&oe();
